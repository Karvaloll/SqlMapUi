
tamper_list = ['0x2char', 'apostrophemask', 'apostrophenullencode',
               'appendnullbyte', 'base64encode', 'between', 'bluecoat',
               'chardoubleencode', 'charencode', 'charunicodeencode',
               'charunicodeescape', 'commalesslimit', 'commalessmid',
               'commentbeforeparentheses', 'concat2concatws', 'equaltolike',
               'escapequotes', 'greatest', 'halfversionedmorekeywords',
               'htmlencode', 'ifnull2casewhenisnull', 'ifnull2ifisnull',
               'informationschemacomment', 'least', 'lowercase', 'luanginx',
               'modsecurityversioned', 'modsecurityzeroversioned',
               'multiplespaces', 'overlongutf8', 'overlongutf8more',
               'percentage', 'plus2concat', 'plus2fnconcat', 'randomcase',
               'randomcomments', 'sp_password', 'space2comment', 'space2dash',
               'space2hash', 'space2morecomment', 'space2morehash',
               'space2mssqlblank', 'space2mssqlhash', 'space2mysqlblank',
               'space2mysqldash', 'space2plus', 'space2randomblank',
               'symboliclogical', 'unionalltounion', 'unmagicquotes',
               'uppercase', 'varnish', 'versionedkeywords',
               'versionedmorekeywords', 'xforwardedfor']

help_dict = {
    '--random-agent': 'Использовать случайно выбранное значение заголовка HTTP User-Agent',
    '--user-agent': 'Использование значение заголовка User-Agent',
    '--header': 'Дополнительный заголовок (например, "X-Forwarded-For: 127.0.0.1")',
    '--data': 'Строка данных для отправки через POST',
    '--method': 'sqlmap автоматически определяет правильный метод HTTP для использования в HTTP-запросах.  Тем не менее, в некоторых случаях требуется принудительно использовать определенный метод HTTP (например, PUT), который не используется автоматизмом.  Это возможно с использованием этой опции (например, --method=PUT)',
    '--param-del': 'Бывают случаи, когда разделитель параметров по умолчанию (например, & в данных GET и POST) необходимо перезаписать, чтобы sqlmap мог правильно разделить и обработать каждый параметр по отдельности.\nНапример:\nsqlmap -u "http://www.target.com/vuln.php" --data="query=foobar;id=1" --param-del=";" -f --banner --dbs --users',
    '--cookie': 'Значение заголовка HTTP куки',
    '--cookie-del': 'Символ, используемый для разделения величин куки',
    '--live-cookies': 'Опцию --live-cookies можно использовать для предоставления файла cookie, который будет использоваться для загрузки актуальных значений.  Это означает, что один и тот же файл будет считываться перед каждым запросом, чтобы получить последнее значение заголовка HTTP Cookie.',
    '--load-cookies': 'Файл, содержащий куки в формате Netscape/wget',
    '--drop-set-cookie': 'Игнорировать заголовок Set-Cookie из ответа',
    '--mobile': 'С помощью HTTP заголовка User-Agent имитировать смартфон',
    '--host': 'Вы можете вручную установить значение заголовка узла HTTP.  По умолчанию заголовок узла HTTP анализируется из предоставленного целевого URL-адреса.\nОбратите внимание, что заголовок узла HTTP также тестируется на предмет SQL-инъекций, если для параметра --level задано значение 5.',
    '--referer': 'Можно подделать значение заголовка HTTP Referer.  По умолчанию заголовок HTTP Referer не отправляется в HTTP-запросах, если он не задан явно.\nОбратите внимание, что заголовок HTTP Referer также тестируется на SQL-инъекции, если для параметра --level установлено значение 3 или выше.',
    '--headers': 'Можно предоставить дополнительные заголовки HTTP, установив параметр --headers.  Каждый заголовок должен быть разделен новой строкой, и их гораздо проще предоставить из конфигурационного INI-файла.  Вы можете взглянуть на пример файла sqlmap.conf для такого случая.',
    '--auth-type': 'Эти параметры можно использовать для указания того, какой внутренний веб-сервер аутентификации протокола HTTP реализует, и допустимых учетных данных, которые будут использоваться для выполнения всех HTTP-запросов к целевому приложению.\nТри поддерживаемых механизма аутентификации протокола HTTP:\nBasic\nDigest\nNTLM',
    '--auth-cred': 'Учётные данные HTTP аутентификации (имя:пароль)',
    '--auth-file': 'Эту опцию следует использовать в тех случаях, когда веб-серверу требуется надлежащий клиентский сертификат и закрытый ключ для аутентификации.  Предоставленное значение должно быть в формате PEM key_file, который содержит ваш сертификат и закрытый ключ.',
    '--ignore-code': 'В случае, если вы хотите протестировать сайт, который время от времени возвращает код ошибки HTTP, вызывающий проблемы при регулярном запуске sqlmap (например, 401 (неавторизованный)), в то время как вы хотите игнорировать его и продолжить тестирование, вы можете использовать этот параметр',
    '--ignore-proxy': 'Переключатель --ignore-proxy следует использовать, если вы хотите запустить sqlmap для целевой части локальной сети, игнорируя установленный для всей системы параметр прокси-сервера HTTP(S).',
    '--ignore-redirects': 'Игнорировать попытки редиректа',
    '--ignore-timeouts': 'Игнорировать таймауты соединений',
    '--proxy': 'Можно указать прокси-адрес HTTP(S) для передачи HTTP(S)-запросов на целевой URL-адрес с опцией --proxy.  Синтаксис значения прокси-сервера HTTP(S) — http://url:port.',
    '--proxy-cred': 'Если для прокси-сервера HTTP(S) требуется аутентификация, вы можете указать учетные данные в формате имя пользователя:пароль для параметра --proxy-cred.',
    '--proxy-file': 'В случае, если вы хотите использовать (одноразовый) список прокси, пропуская следующий прокси при любом признаке проблемы с подключением (например, блокировка инвазивного IP-адреса), можно использовать параметр --proxy-file, указав имя файла, содержащего большой список прокси.',
    '--proxy-freq': 'Запросы между сменой прокси из заданного списка',
    '--tor': 'Если по какой-либо причине вам необходимо оставаться анонимным, вместо прохождения через один предопределенный прокси-сервер HTTP(S), вы можете настроить клиент Tor вместе с Privoxy (или аналогичным) на своем компьютере, как описано в руководствах по установке Tor.  Затем вы можете использовать переключатель --tor, и sqlmap попытается автоматически установить параметры подключения к прокси-серверу Tor.',
    '--tor-port': 'Если вы хотите вручную установить тип и порт используемого прокси Tor, вы можете сделать это с опциями --tor-type и --tor-port (например, --tor-type=SOCKS5 --tor-port 9050) .',
    '--tor-type': 'Если вы хотите вручную установить тип и порт используемого прокси Tor, вы можете сделать это с опциями --tor-type и --tor-port (например, --tor-type=SOCKS5 --tor-port 9050) .',
    '--check-tor': 'Настоятельно рекомендуется время от времени использовать --check-tor, чтобы убедиться, что все настроено правильно.  Бывают случаи, когда пакеты Tor (например, Vidalia) неправильно настроены (или сбрасывают ранее установленную конфигурацию), создавая ложное ощущение анонимности.  С помощью этого переключателя sqlmap проверит, что все работает должным образом, отправив один запрос https://check.torproject.org/. Используете ли вы Tor?  страницу перед любыми целевыми запросами.  Если эта проверка не пройдена, sqlmap предупредит вас и резко завершит работу.',
    '--delay': 'Можно указать количество секунд между каждым запросом HTTP(S).  Допустимое значение — число с плавающей запятой, например, 0,5 означает полсекунды.  По умолчанию задержка не установлена.',
    '--timeout': 'Можно указать количество секунд ожидания, прежде чем считать, что время ожидания HTTP(S)-запроса истекло.  Допустимое значение — число с плавающей запятой, например, 10,5 означает десять с половиной секунд.  По умолчанию установлено 30 секунд.',
    '--retries': 'Можно указать максимальное количество повторных попыток при истечении времени ожидания соединения HTTP(S).  По умолчанию он повторяет попытку до трех раз.',
    '--randomize': 'Можно указать имена параметров, значения которых вы хотите изменять случайным образом при каждом запросе. Длина и тип сохраняются в соответствии с предоставленными исходными значениями.',
    '--safe-url': 'URL-адрес для частого посещения во время тестирования',
    '--safe-post': 'Данные POST для отправки на безопасный URL',
    '--safe-req': 'Загружать и использовать безопасный HTTP-запрос из файла',
    '--safe-freq': 'Тестовые запросы между двумя визитами на заданный безопасный URL',
    '--skip-urlencode': 'В зависимости от размещения параметра (например, GET) его значение по умолчанию может быть закодировано в URL.  В некоторых случаях внутренние веб-серверы не соответствуют стандартам RFC и требуют, чтобы значения отправлялись в необработанном незакодированном виде.  Используйте --skip-urlencode в таких случаях.',
    '--csrf-token': 'Многие сайты включают защиту от CSRF в виде токенов, значений скрытых полей, которые устанавливаются случайным образом во время ответа на каждую страницу.  sqlmap автоматически попытается распознать и обойти такую ​​защиту, но есть опции --csrf-token и --csrf-url, которые можно использовать для дальнейшей тонкой настройки.  Опцию --csrf-token можно использовать для установки имени скрытого значения, содержащего рандомизированный токен.  Это полезно в тех случаях, когда веб-сайты используют нестандартные имена для таких полей. ',
    '--csrf-url': 'Опцию --csrf-url можно использовать для получения значения токена с произвольного URL-адреса.  Это полезно, если уязвимый целевой URL изначально не содержит необходимого значения токена, но требуется извлечь его из какого-либо другого места.',
    '--csrf-method': 'Метод HTTP для использования при посещении страницы с токеном анти-CSRF',
    '--csrf-retries': 'Повторные попытки получения токена анти-CSRF (по умолчанию 0)',
    '--force-ssl': 'В случае, если этот пользователь хочет принудительно использовать запросы SSL/HTTPS к цели, он может использовать этот переключатель.  Это может быть полезно в случаях, когда URL-адреса собираются с помощью параметра --crawl или когда журнал Burp предоставляется с параметром -l.',
    '--chunked': 'Использовать HTTP-запросы с фрагментированной передачей данных (POST)',
    '--hpp': 'Использовать метод загрязнения параметра HTTP',
    '--eval': 'В случае, если пользователь хочет изменить (или добавить новые) значения параметров, скорее всего, из-за какой-то известной зависимости, он может предоставить sqlmap собственный код Python с параметром --eval, который будет оцениваться непосредственно перед каждым запросом.\nНапример:\n$ pythonsqlmap.py - u"http://www.target.com/vuln.php?id=1&hash=c4ca4238a0b9238/20dcc509a6f75849b" --eval = "import hashlib;hash=hashlib.md5(id).hexdigest()"\nКаждый запрос такого запуска будет повторно оценивать значение хэша параметра GET, чтобы содержать свежий дайджест хеша MD5 для текущего значения идентификатора параметра.',
    '-o': 'Этот переключатель является псевдонимом, который неявно устанавливает следующие параметры и переключатели:\n--keep-alive\n--null-conection\n--threads=3\nесли не установлено более высокое значение.',
    '--predict-output': 'Этот переключатель используется в алгоритме вывода для последовательного статистического прогнозирования символов извлекаемого значения.  Статистическая таблица с наиболее перспективными значениями символов строится на основе элементов, указанных в txt/common-outputs.txt, в сочетании со знанием текущего используемого перечисления.  В случае, если значение может быть найдено среди общих выходных значений, по мере продвижения процесса последующие таблицы символов сужаются все больше и больше.  При использовании в сочетании с поиском общих сущностей СУБД, таких как имена и привилегии системных таблиц, ускорение является значительным.  Конечно, вы можете отредактировать общий выходной файл в соответствии с вашими потребностями, если, например, вы заметите общие шаблоны в именах таблиц базы данных или что-то подобное.',
    '--keep-alive': 'Этот параметр указывает программе sqlmap использовать постоянные HTTP-соединения. Обратите внимание, что этот переключатель несовместим с ключом --proxy.',
    '--null-connection': 'Существуют специальные типы HTTP-запросов, которые можно использовать для получения размера HTTP-ответа без получения тела HTTP.  Это знание можно использовать в технике слепой инъекции, чтобы отличать истинные ответы от ложных.  Когда указан этот переключатель, sqlmap попытается протестировать и использовать два разных метода подключения NULL: Range и HEAD.  Если какой-либо из них поддерживается целевым веб-сервером, ускорение будет происходить за счет очевидной экономии используемой полосы пропускания.',
    '--threads': 'Максимальное количество одновременных HTTP(s) запросов (по умолчанию 1)',
    '-p': 'Тестируемый параметр(ы)',
    '--skip': 'Пропустить тестирования данного параметра(ов)',
    '--skip-static': 'Пропустить тестирование параметров, которые не кажутся динамическими',
    '--param-exclude': 'Регулярное выражение для исключения параметров из тестирования (например, "ses")',
    '--param-filter': 'Выберите проверяемые параметры по месту (например, "POST")',
    '--dbms': 'Принудительно указать СУБД',
    '--dbms-cred': 'Данные аутентификации СУБД (пользователь:пароль)',
    '--os': 'Принудительно указать операционную систему СУБД',
    '--invalid-bignum': 'В тех случаях, когда sqlmap необходимо аннулировать исходное значение параметра (например, id=13), он использует классическое отрицание (например, id=-13).  С помощью этого переключателя можно принудительно использовать большие целые значения для достижения той же цели (например, id=99999999).',
    '--invalid-logical': 'В тех случаях, когда sqlmap необходимо аннулировать исходное значение параметра (например, id=13), он использует классическое отрицание (например, id=-13).  С помощью этого переключателя можно принудительно использовать логические операции для достижения той же цели (например, id=13 AND 18=19).',
    '--invalid-string': 'В тех случаях, когда sqlmap необходимо аннулировать исходное значение параметра (например, id=13), он использует классическое отрицание (например, id=-13).  С помощью этого переключателя можно принудительно использовать случайные строки для достижения той же цели (например, id=akewmc).',
    '--no-cast': 'При получении результатов sqlmap использует механизм, при котором все записи приводятся к строковому типу и заменяются символом пробела в случае значений NULL.  Это делается для предотвращения любых ошибочных состояний (например, объединения значений NULL со строковыми значениями) и для упрощения самого процесса поиска данных.  Тем не менее, известны случаи (например, более старые версии СУБД MySQL), когда этот механизм необходимо было отключить (используя этот переключатель) из-за проблем с самим получением данных (например, значения None возвращаются обратно).',
    '--no-escape': 'В тех случаях, когда sqlmap необходимо использовать строковые значения (с разделителями в одинарных кавычках) внутри полезной нагрузки (например, SELECT "foobar"), эти значения автоматически экранируются (например, SELECT CHAR(102)+CHAR(111)+CHAR(111)+CHAR (98)+СИМВОЛ(97)+СИМВОЛ(114)).  Это делается по двум причинам: запутывание содержимого полезной нагрузки и предотвращение потенциальных проблем с механизмами экранирования запросов (например, magic_quotes и/или mysql_real_escape_string) на внутреннем сервере.  Пользователь может использовать этот переключатель, чтобы отключить его (например, чтобы уменьшить размер полезной нагрузки)."',
    '--prefix': 'Предваряющая строка инъекционного запроса',
    '--suffix': 'Завершающая строка инъекционного запроса',
    '--tamper': 'Эта опция может быть очень полезной и мощной в ситуациях, когда между вами и серверной системой управления базами данных имеется слабый механизм проверки входных данных.  Этот механизм обычно представляет собой самостоятельно разработанную процедуру проверки ввода, вызываемую исходным кодом приложения, дорогостоящим устройством IPS корпоративного уровня или брандмауэром веб-приложений (WAF).',
    "0x2char": "Заменение каждую (MySQL) 0x <Шестнаджетеричную> Кодированную строку на эквивалентный CONCAT (CHAR (), ...) ДОВОЙНИК",
    "apostrophemask": "Заменение Символ АПОСТРОФА (') на ЕГО UTF-8 Полная ширина Аналог (ТО Есте ->% EF% BC% 87)",
    "apostrophenullencode": "Заменение Символ Апострофа (') на нелегальный двойной Unicode Аналог (то самые \"->% 00% 27)",
    "appendnullbyte": "Добавляются (доступ) нулевой байтовый символ (% 00) в конце полезной нагрузки",
    "base64encode": "Base64-кодирует все символы в данной полезной нагрузке",
    "between": "Заменяет больше, чем оператор ('>') с «NOT BETWEEN 0 AND #» и равен оператору («=») с «BETWEEN # AND #»",
    "bluecoat": "Заменяет пространственный символ после оператора SQL с действительным случайным пустым символом.После этого замените символ «=» с оператором, как",
    "chardoubleencode": "Двойные URL-кодирует все символы в данной полезной нагрузке (не обработка уже кодирована) (например, SELECT -> %2553%2545%254C%2545%2543%2554)",
    "charencode": "URL-кодирует все символы в данной полезной нагрузке (не обработка уже кодирована) (например, SELECT -> %53%45%4C%45%43%54)",
    "charunicodeencode": "Unicode-URL-кодирует все символы в данной полезной нагрузке (не обработка уже кодирована) (например, SELECT -> %U0053%U0045%U004C%U0045%U0043%U0054)",
    "charunicodeescape": "Unicode-issapes некодируемые символы в заданной полезной нагрузке (не обработка уже кодирована) (например, SELECT ->\\ u0053 \\ u0045 \\ u004c \\ u0045 \\ u0043 \\ u0054)",
    "commalesslimit": "Заменяет (mysql) экземпляры, такие как «LIMIT M, N» с «LIMIT N OFFSET M»",
    "commalessmid": "Заменяет (MySQL) экземпляры, такие как «MID (A, B, C)» с «MID (A от B для C) '",
    "commentbeforeparentheses": "Комментарий (встроенный) комментарий перед скобками (например, (-> / ** / ()",
    "concat2concatws": "Заменяет (mysql) экземпляры, такие как «CONCAT(A, B)» на аналог 'CONCAT_WS(MID(CHAR(0), 0, 0), A, B)' ",
    "equaltolike": "Заменяет все вхождения оператора равно ('=') с аналогом 'LIKE'",
    "escapequotes": "Слэш побег один и двойные кавычки (например, '-> \\')",
    "greatest": "Заменяет больше оператор ('>') на 'GREATEST'",
    "halfversionedmorekeywords": "Добавляет (mysql) версийный комментарий перед каждым ключевым словом",
    "htmlencode": "HTML кодируется (с использованием кодовых точек) Все не буквенно-цифровые символы (например, '-> & # 39;)",
    "ifnull2casewhenisnull": "Заменяет экземпляры, такие как 'IFNULL(A, B)' на 'CASE WHEN ISNULL(A) THEN (B) ELSE (A) END' ",
    "ifnull2ifisnull": "Заменяет экземпляры, такие как 'IFNULL(A, B)' на 'IF(ISNULL(A), B, A)'",
    "informationschemacomment": "Добавьте встроенный комментарий (/ ** /) до конца всех вхождений (MySQL) 'information_schema'",
    "least": "Заменяет больше оператор («>») на 'LEAST' ",
    "lowercase": "Заменяет каждый символ верхнего регистра с нижним значением регистра (E.g. SELECT -> select)",
    "luanginx": "Lua-nginx wafs bypass (E.g. CloudFlare)",
    "modsecurityversioned": "Охватывает полный запрос с (MySQL) версионным комментарием",
    "modsecurityzeroversioned": "Охватывает полный запрос с (MySQL) Ноль-версийный комментарий",
    "multiplespaces": "Добавляет несколько пробелов ('') вокруг ключевых слов SQL",
    "overlongutf8": "Преобразует все (неиннотные) символы в заданную полезную нагрузку на сверхлизуемую UTF8 (не обработка уже кодирована) (например, '->% C0% A7)",
    "overlongutf8more": "Превращает все символы в заданную полезную нагрузку на сверхлизуемую UTF8 (не обработка уже кодирована) (например, SELECT -> %С1%93%С1%85%С1%8C%C1%85%C1%83%C1%94)",
    "percentage": "Добавляет процентный знак («%») перед каждым символом (например, SELECT -> %S%E%L%E%C%T)",
    "plus2concat": "Заменяет плюс оператор («+») с функцией (MSSQL) CONCAT() ",
    "plus2fnconcat": "Заменяет плюс оператор ('+') с функцией ODBC (MSSQL) {fn CONCAT()} ",
    "randomcase": "Заменяет каждый символ ключевых слов со случайным значением регистра (E.g. SELECT -> SEleCt)",
    "randomcomments": "Добавить встроенные комментарии встроенные внутри ключевых слов SQL (например, SELECT -> S/**/E/**/LECT)",
    "sp_password": "Добавляются (MSSQL) Функция «SP_PASSWORD» до конца полезной нагрузки для автоматического запутывания от журналов СУБД",
    "space2comment": "Заменяет пространственный символ ('') с комментариями / ** / ",
    "space2dash": "Заменяет пространственный символ ('') с помощью Tash Comment ('-'), а затем случайная строка и новая строка ('\\ n')",
    "space2hash": "Заменяет (mysql) экземпляры пространственного символа ('') с символом фунта ('#'), а затем случайная строка и новая строка ('\\ n')",
    "space2morecomment": "Заменяет (mysql) экземпляры пространственного символа ('') с комментариями \"/ ** _ ** / '",
    "space2morehash": "Заменяет (mysql) экземпляры пространственного символа ('') с символом фунта ('#'), а затем случайная строка и новая строка ('\\ n')",
    "space2mssqlblank": "Заменяет (MSSQL) экземпляры пространственного символа ('') со случайным пустым символом из действительного набора альтернативных символов",
    "space2mssqlhash": "Заменяет пространственный символ ('') с символом фунта («#»), а затем новая строка ('\\ n')",
    "space2mysqlblank": "Заменяет (mysql) экземпляры пространственного символа ('') со случайным пустым символом из действительного набора альтернативных символов",
    "space2mysqldash": "Заменяет пространственный символ ('') с помощью Tash Comment ('-'), а затем новая строка ('\\ n')",
    "space2plus": "Заменяет пространственный символ ('') с плюсом ('+')",
    "space2randomblank": "Заменяет пространственный символ ('') со случайным пустым символом из действительного набора альтернативных символов",
    "symboliclogical": "Заменяет AND и OR логические операторы со своими символическими аналогами (&& и ||)",
    "unionalltounion": "Заменяет экземпляры UNION ALL SELECT на UNION SELECT",
    "unmagicquotes": "Заменяет цитату символа (') с многобайтовым комбо% BF% 27 вместе с универсальным комментарием в конце (чтобы он работал)",
    "uppercase": "Заменяет каждый символ ключевых слов с помощью верхнего значения регистра (E.g. select -> SELECT)",
    "varnish": "Добавляет HTTP-заголовок «X-originating-IP», чтобы обойти Varnish Firewall",
    "versionedkeywords": "Приложит каждую нефункциональную ключевое слово с (MySQL) версий",
    "versionedmorekeywords": "Согласится каждое ключевое слово с (MySQL) версийный комментарий",
    "xforwardedfor": "Добавьте поддельный HTTP Header 'X-Foreded-for'",
    '--level': 'Для этой опции требуется аргумент, указывающий уровень выполняемых тестов.  Есть пять уровней.  Значение по умолчанию равно 1, если выполняется ограниченное количество тестов (запросов).  И наоборот, уровень 5 будет подробно проверять гораздо большее количество полезных данных и границ (как в паре префикса и суффикса полезных данных SQL).  Полезные нагрузки, используемые sqlmap, указаны в текстовом файле xml/payloads.xml.  Следуя инструкциям в верхней части файла, если sqlmap пропустит внедрение, вы также сможете добавить свои собственные полезные данные для тестирования!\nЭтот параметр влияет не только на то, какую полезную нагрузку пытается использовать sqlmap, но и на то, какие точки внедрения берутся на экзамене: всегда проверяются параметры GET и POST, значения заголовков HTTP Cookie проверяются, начиная с уровня 2, а значения заголовков HTTP User-Agent/Referer проверяются, начиная с уровня 2. Уровень 3.\nВ общем, чем сложнее обнаружить SQL-инъекцию, тем выше должен быть установлен --level.',
    '--risk': 'Для этой опции требуется аргумент, указывающий риск выполнения тестов.  Есть три значения риска.  Значение по умолчанию равно 1, что безвредно для большинства точек внедрения SQL.  Значение риска 2 добавляет к уровню по умолчанию тесты для тяжелых запросов SQL-инъекций на основе времени, а значение 3 добавляет также тесты SQL-инъекций на основе ИЛИ.\nВ некоторых случаях, таких как SQL-инъекция в операторе UPDATE, внедрение полезной нагрузки на основе ИЛИ может привести к обновлению всех записей таблицы, что, безусловно, не то, что нужно злоумышленнику.  По этой и другим причинам была введена эта опция: пользователь может контролировать, какие полезные нагрузки будут тестироваться, пользователь может произвольно выбрать использование также потенциально опасных.  Как и в предыдущем варианте, полезные данные, используемые sqlmap, указываются в текстовом файле xml/payloads.xml, и вы можете редактировать и добавлять свои собственные.',
    '--string': 'По умолчанию отличить истинный запрос от ложного (приблизительная концепция уязвимостей слепых SQL-инъекций на основе логических значений) выполняется путем сравнения содержимого страницы внедренных запросов с исходным содержимым страницы без внедрения.  Не всегда эта концепция работает, потому что иногда содержимое страницы меняется при каждом обновлении, даже ничего не внедряя, например, когда на странице есть счетчик, динамический рекламный баннер или любая другая часть HTML, которая отображается динамически и может меняться во времени не только следовательно, на ввод пользователя.  Чтобы обойти это ограничение, sqlmap изо всех сил старается идентифицировать эти фрагменты тела ответа и действовать соответствующим образом.  Иногда это может не сработать, поэтому пользователь может указать строку (опция --string), которая должна присутствовать на исходной странице (хотя это не является обязательным требованием) и на всех страницах с введенным запросом True, но ее нет на исходной странице. False. ',
    '--not-string': 'В качестве альтернативы пользователь может указать строку (опция --not-string), которая отсутствует на исходной странице и не на всех страницах запроса True, но всегда появляется на страницах False.',
    '--regexp': 'Вместо статической строки пользователь может указать регулярное выражение (опция --regexp)',
    '--code': 'В тех случаях, когда пользователь знает, что отличить истинный запрос от ложного можно с помощью HTTP-кода (например, 200 для истинного и 401 для ложного), он может предоставить эту информацию sqlmap (например, --code=200).',
    '--smart': 'Выполнять тщательные тесты, только если эвристика положительна.',
    '--text-only': 'В случаях с большим количеством активного контента (например, скрипты, встраивания и т. д.) в теле ответов HTTP вы можете фильтровать страницы (переключая --text-only) только для их текстового контента.  Таким образом, в большом количестве случаев вы можете автоматически настроить механизм обнаружения.',
    '--titles': 'В случаях, когда пользователь знает, что отличить запрос True от False можно с помощью HTML-заголовка (например, Welcome для True и Forbidden для False), он может включить сравнение по заголовку с помощью ключа --titles.',
    '--technique': 'Этот параметр можно использовать для указания типа инъекции SQL для проверки.  По умолчанию sqlmap проверяет все типы/методы, которые он поддерживает.\n В определенных ситуациях вы можете захотеть протестировать только один или несколько конкретных типов SQL-инъекций, и именно здесь этот параметр вступает в игру.\n Эта опция требует аргумента.  Такой аргумент представляет собой строку, состоящую из любой комбинации символов B, E, U, S, T и Q, где каждая буква обозначает различную технику:\n\tB: Boolean-based blind\n\tE: Error-based\n\tU: Union query-based\n\tS: Stacked queries\n\tT: Time-based blind\n\tQ: Inline queries\nНаBпример, вы можете предоставить ES, если хотите тестировать и использовать запросы на основе ошибок и стекированные запросы только для типов SQL-инъекций.  Значение по умолчанию — BEUSTQ.\n Обратите внимание, что строка должна включать в себя букву метода многоуровневых запросов S, если вы хотите получить доступ к файловой системе, перехватить операционную систему или получить доступ к кустам реестра Windows.',
    '--time-sec': 'Можно установить секунды для задержки ответа при тестировании слепых SQL-инъекций на основе времени, указав параметр --time-sec, за которым следует целое число.  По умолчанию установлено значение 5 секунд.',
    '--union-cols': 'По умолчанию sqlmap проверяет технику внедрения SQL-запроса UNION, используя от 1 до 10 столбцов.  Однако этот диапазон можно увеличить до 50 столбцов, указав более высокое значение --level.  Подробную информацию смотрите в соответствующем параграфе.\nВы можете вручную указать программе sqlmap проверять этот тип SQL-инъекций с определенным диапазоном столбцов, предоставив инструменту параметр --union-cols, за которым следует диапазон целых чисел.  Например, 12-16 означает тесты для внедрения SQL-запроса UNION с использованием от 12 до 16 столбцов.',
    '--union-char': 'По умолчанию sqlmap проверяет технику внедрения SQL запроса UNION с использованием символа NULL.  Однако, предоставляя более высокое значение --level, sqlmap будет выполнять тесты также со случайным числом, потому что есть некоторые крайние случаи, когда тесты запроса UNION с NULL терпят неудачу, тогда как со случайным целым числом они завершаются успешно.\nВы можете вручную указать sqlmap для проверки этого типа внедрения SQL с определенным символом, используя параметр --union-char с желаемым значением символа (например, --union-char 123).',
    '--union-from': 'В некоторых случаях внедрения SQL-запроса UNION необходимо принудительно использовать допустимое и доступное имя таблицы в предложении FROM.  Например, Microsoft Access требует использования такой таблицы.  Без предоставления одного запроса UNION SQL-инъекция не сможет работать правильно (например, --union-from=users).',
    '--dns-domain': ' Если пользователь управляет машиной, зарегистрированной как DNS-сервер домена (например, domain attacker.com), он может включить эту атаку, используя эту опцию (например, --dns-domain Attacker.com).  Предварительным условием для его работы является запуск sqlmap с правами администратора (использование привилегированного порта 53) и наличие одного обычного (слепого) метода для эксплуатации.  Вот только целью этой атаки является ускорение процесса извлечения данных в случае выявления хотя бы одной техники (в лучшем случае слепой по времени).  В случае, если доступны слепые или UNION-запросы на основе ошибок, они будут пропущены, поскольку они являются предпочтительными по умолчанию.',
    '--second-url': 'Атака с внедрением SQL-кода второго порядка — это атака, при которой результат(-ы) внедрения полезной нагрузки на одной уязвимой странице отображается (отражается) на другой (например, во фрейме).  Обычно это происходит из-за хранения в базе данных введенных пользователем данных на исходной уязвимой странице.\nВы можете вручную указать sqlmap протестировать этот тип SQL-инъекций, используя параметр --second-order с URL-адресом или --second-req с файлом запроса для отправки на сервер, где отображаются результаты.',
    '--second-req': 'Атака с внедрением SQL-кода второго порядка — это атака, при которой результат(-ы) внедрения полезной нагрузки на одной уязвимой странице отображается (отражается) на другой (например, во фрейме).  Обычно это происходит из-за хранения в базе данных введенных пользователем данных на исходной уязвимой странице.\nВы можете вручную указать sqlmap протестировать этот тип SQL-инъекций, используя параметр --second-order с URL-адресом или --second-req с файлом запроса для отправки на сервер, где отображаются результаты.',
    '--fingerprint': 'По умолчанию отпечаток внутренней системы управления базой данных веб-приложения обрабатывается sqlmap автоматически.  Сразу после завершения фазы обнаружения, когда пользователю в конечном итоге предлагается выбрать, какой уязвимый параметр использовать в дальнейшем, sqlmap снимает отпечатки пальцев с внутренней системы управления базой данных и продолжает внедрение, зная, какой синтаксис SQL, диалект и запросы использовать. продолжить атаку в рамках архитектуры базы данных.\nЕсли для какого-либо экземпляра вы хотите выполнить обширный отпечаток пальца системы управления базой данных, основанный на различных методах, таких как определенные диалекты SQL и внутренние сообщения об ошибках, вы можете предоставить переключатель --fingerprint.  sqlmap выполнит гораздо больше запросов и определит точную версию СУБД и, по возможности, операционную систему, архитектуру и уровень исправления.\nЕсли вы хотите, чтобы отпечаток пальца был еще более точным, вы также можете указать ключ -b или --banner.',
    '--all': 'Этот переключатель можно использовать в ситуациях, когда пользователь хочет получить все удаленно доступное с помощью одного переключателя.  Это не рекомендуется, так как будет генерироваться большое количество запросов, извлекающих как полезные, так и бесполезные данные.',
    '--banner': 'В большинстве современных систем управления базами данных есть функция и/или переменная среды, которые возвращают версию системы управления базами данных и, в конечном итоге, детализируют ее уровень исправлений, базовую систему.  Обычно это функция version(), а переменная окружения — @@version, но это зависит от целевой СУБД.',
    '--current-user': 'С помощью этого переключателя можно получить пользователя системы управления базами данных, который эффективно выполняет запрос к серверной СУБД из веб-приложения.',
    '--current-db': 'С помощью этого переключателя можно получить имя базы данных системы управления базами данных, к которой подключено веб-приложение.',
    '--hostname': 'С помощью этого переключателя можно получить имя хоста системы управления базами данных.',
    '--is-dba': 'Можно определить, является ли текущий пользователь сеанса системы управления базами данных администратором базы данных, также известным как администратор баз данных.  sqlmap вернет True, если это так, и наоборот False.',
    '--users': 'Когда пользователь сеанса имеет доступ на чтение к системной таблице, содержащей информацию о пользователях СУБД, можно перечислить список пользователей.',
    '--passwords': 'Когда пользователь сеанса имеет доступ на чтение к системной таблице, содержащей информацию о паролях пользователей СУБД, можно перечислить хэши паролей для каждого пользователя системы управления базами данных.  sqlmap сначала перечислит пользователей, а затем разные хэши паролей для каждого из них.',
    '--privileges': 'Когда пользователь сеанса имеет доступ для чтения к системной таблице, содержащей информацию о пользователях СУБД, можно перечислить привилегии для каждого пользователя системы управления базами данных.  По привилегиям sqlmap также покажет вам, кто является администратором базы данных.\nВы также можете указать параметр -U, чтобы указать пользователя, которому вы хотите перечислить привилегии.\nЕсли вы укажете CU в качестве имени пользователя, он будет рассматривать его как псевдоним для текущего пользователя и перечислит привилегии для этого пользователя.\nВ Microsoft SQL Server эта функция покажет вам, является ли каждый пользователь администратором базы данных, а не список привилегий для всех пользователей.',
    '--roles': 'Когда пользователь сеанса имеет доступ на чтение к системной таблице, содержащей информацию о пользователях СУБД, можно перечислить роли для каждого пользователя системы управления базами данных.\nВы также можете указать параметр -U, чтобы указать пользователя, которому вы хотите перечислить привилегии.\nЕсли вы укажете CU в качестве имени пользователя, он будет рассматривать его как псевдоним для текущего пользователя и перечислит привилегии для этого пользователя.\nЭта функция доступна только в том случае, если в качестве СУБД используется Oracle',
    '--dbs': 'Когда пользователь сеанса имеет доступ для чтения к системной таблице, содержащей информацию о доступных базах данных, можно перечислить список баз данных',
    '--tables': 'Когда пользователь сеанса имеет доступ для чтения к системной таблице, содержащей информацию о таблицах баз данных, можно перечислить список таблиц для конкретной базы данных системы управления базами данных.',
    '--columns': 'Когда пользователь сеанса имеет доступ для чтения к системной таблице, содержащей информацию о таблицах базы данных, можно перечислить список столбцов для конкретной таблицы базы данных.  sqlmap также перечисляет тип данных для каждого столбца.',
    '--schema': 'С помощью этого переключателя пользователь может получить схему СУБД.  Список схемы будет содержать все базы данных, таблицы и столбцы вместе с их соответствующими типами.\nВ сочетании с --exclude-sysdbs будет получена и показана только часть схемы, содержащей несистемные базы данных.',
    '--exclude-sysdbs': 'будет получена и показана только часть схемы, содержащей несистемные базы данных.',
    '--count': 'В случае, если пользователь хочет просто узнать количество записей в таблице (таблицах) перед тем, как сделать дамп нужной, он может использовать этот переключатель.',
    '--dump': 'Сдампить записи таблицы базы данных СУБД',
    '--dump-all': 'Сдампить все записи таблиц базы данных СУБД',
    '--search': 'Переключатель и опции: --search, -C, -T, -D\n\n Этот переключатель позволяет вам искать определенные имена баз данных, определенные таблицы во всех базах данных или определенные столбцы во всех таблицах баз данных.\n\nЭто полезно, например, для идентификации таблиц, содержащих пользовательские учетные данные приложения, где имена соответствующих столбцов содержат строку, такую как имя и пароль.',
    '--comments': 'Получить комментарии СУБД',
    '--statements': 'Получить операторы SQL, выполняемые в СУБД',
    '-D': 'БД СУБД для перечисления',
    '-T': 'Таблица(ы) БД СУБД для перечисления',
    '-C': 'Колонка(и) таблицы БД СУБД для перечисления',
    '-X': 'Колонка(и) БД СУБД для не перечисления',
    '-U': 'Пользователи СУБД для перечисления',
    '--pivot-column': 'Иногда (например, для Microsoft SQL Server, Sybase и SAP MaxDB) невозможно вывести строки таблицы напрямую с помощью механизма OFFSET m, n из-за отсутствия аналогичного.  В таких случаях sqlmap выгружает содержимое, определяя наиболее подходящий сводной столбец (с наиболее уникальными значениями), значения которого используются позже для извлечения значений других столбцов.  Если необходимо принудительно использовать конкретную сводную колонку, потому что автоматически выбранная не подходит (например, из-за отсутствия результатов дампа таблицы), вы можете использовать опцию --pivot-column (например, --pivot-column=id).',
    '--where': 'Если вы хотите ограничить дамп определенными значениями столбца (или диапазонами), вы можете использовать опцию --where.  Предоставленная логическая операция будет автоматически использоваться внутри предложения WHERE.  Например, если вы используете --where="id>3", будут извлечены только строки таблицы со значением идентификатора столбца больше 3 (путем добавления WHERE id>3 к используемым запросам дампа).',
    '--start': 'Если вы хотите выводить только диапазон записей, вы можете указать опции --start и/или --stop, чтобы соответственно начать выгрузку с определенной записи и остановить выгрузку на определенной записи.  Например, если вы хотите вывести только первую запись, укажите --stop 1 в командной строке.  И наоборот, если, например, вы хотите вывести только вторую и третью записи, укажите --start 1 --stop 3.',
    '--stop': 'Если вы хотите выводить только диапазон записей, вы можете указать опции --start и/или --stop, чтобы соответственно начать выгрузку с определенной записи и остановить выгрузку на определенной записи.  Например, если вы хотите вывести только первую запись, укажите --stop 1 в командной строке.  И наоборот, если, например, вы хотите вывести только вторую и третью записи, укажите --start 1 --stop 3.',
    '--first': 'Также можно указать, какой отдельный символ или диапазон символов выгружать с помощью опций --first и --last.  Например, если вы хотите вывести записи столбцов с третьего по пятый символ, укажите --first 3 --last 5. Эта функция применима только к методам слепого внедрения SQL, поскольку для методов внедрения SQL на основе ошибок и запроса UNION количество запросов точно такое же, независимо от длины записи столбца, выводимой в дамп.',
    '--last': 'Также можно указать, какой отдельный символ или диапазон символов выгружать с помощью опций --first и --last.  Например, если вы хотите вывести записи столбцов с третьего по пятый символ, укажите --first 3 --last 5. Эта функция применима только к методам слепого внедрения SQL, поскольку для методов внедрения SQL на основе ошибок и запроса UNION количество запросов точно такое же, независимо от длины записи столбца, выводимой в дамп.',
    '--sql-query': 'SQL-запрос и функции оболочки SQL позволяют выполнять произвольные операторы SQL в системе управления базами данных.  sqlmap автоматически анализирует предоставленный оператор, определяет, какой метод подходит для его внедрения и как соответствующим образом упаковать полезную нагрузку SQL.\n\nЕсли запрос является оператором SELECT, sqlmap извлечет его выходные данные.  В противном случае он будет выполнять запрос с помощью метода внедрения SQL-запроса с накоплением, если веб-приложение поддерживает несколько операторов в серверной системе управления базой данных.  Имейте в виду, что некоторые технологии веб-приложений не поддерживают стековые запросы в определенных системах управления базами данных.  Например, PHP не поддерживает стекированные запросы, когда серверной СУБД является MySQL, но поддерживает, когда серверной СУБД является PostgreSQL.',
    '--sql-shell': 'Приглашение интерактивного SQL шелла',
    '--sql-file': 'Выполнить SQL выражение из данного файла(ов)',
    '--common-tables': 'Бывают случаи, когда ключ --tables нельзя использовать для получения имен таблиц баз данных.  Эти случаи обычно относятся к одной из следующих категорий:\n\nСистема управления базой данных — MySQL < 5.0, где информационная_схема недоступна.\nСистема управления базой данных — Microsoft Access, а системная таблица MSysObjects недоступна для чтения — настройка по умолчанию.\nПользователь сеанса не имеет прав на чтение системной таблицы, в которой хранится схема баз данных.\n\nЕсли применим какой-либо из первых двух случаев и вы предоставили переключатель --tables, sqlmap предложит вам вернуться к этому методу.  Любой из этих случаев применим к вашей ситуации, sqlmap может по-прежнему идентифицировать некоторые существующие таблицы, если вы предоставите ему переключатель --common-tables.  sqlmap выполнит атаку грубой силы, чтобы обнаружить наличие общих таблиц в СУБД.\n\nСписок общих имен таблиц — txt/common-tables.txt, и вы можете редактировать его по своему усмотрению.',
    '--common-columns': 'Что касается таблиц, бывают случаи, когда переключатель --columns нельзя использовать для получения имен столбцов таблиц баз данных.  Эти случаи обычно относятся к одной из следующих категорий:\n\nСистема управления базой данных — MySQL < 5.0, где информационная_схема недоступна.\nСистема управления базой данных — Microsoft Access, где такая информация недоступна внутри системных таблиц.\nПользователь сеанса не имеет прав на чтение системной таблицы, в которой хранится схема баз данных.\n\nЕсли применим любой из первых двух случаев и вы предоставили переключатель --columns, sqlmap предложит вам вернуться к этому методу.  Любой из этих случаев применим к вашей ситуации, sqlmap может по-прежнему идентифицировать некоторые существующие таблицы, если вы предоставите ему переключатель --common-columns.  sqlmap выполнит атаку грубой силы, чтобы обнаружить наличие общих столбцов в СУБД.\n\nСписок общих имен таблиц — txt/common-columns.txt, и вы можете редактировать его по своему усмотрению.',
    '--common-files': 'Проверить существование распространённых файлов',
    '--udf-inject': 'Вы можете внедрить свои собственные определяемые пользователем функции (UDF), скомпилировав разделяемую библиотеку MySQL или PostgreSQL, DLL для Windows и общий объект для Linux/Unix, а затем предоставить sqlmap путь, по которому разделяемая библиотека хранится локально на вашем компьютере.  Затем sqlmap задаст вам несколько вопросов, загрузит разделяемую библиотеку в файловую систему сервера базы данных, создаст из нее пользовательские функции и, в зависимости от ваших опций, выполнит их.  Когда вы закончите использовать введенные UDF, sqlmap также может удалить их из базы данных.\n\nЭти методы подробно описаны в официальном документе Расширенное внедрение SQL для полного контроля над операционной системой.\n\nИспользуйте опцию --udf-inject и следуйте инструкциям.\n\nЕсли вы хотите, вы также можете указать путь к локальной файловой системе разделяемой библиотеки через командную строку, используя параметр --shared-lib.  Наоборот, sqlmap запросит у вас путь во время выполнения.\n\nЭта функция доступна только в том случае, если используется система управления базой данных MySQL или PostgreSQL.',
    '--shared-lib': 'Вы можете внедрить свои собственные определяемые пользователем функции (UDF), скомпилировав разделяемую библиотеку MySQL или PostgreSQL, DLL для Windows и общий объект для Linux/Unix, а затем предоставить sqlmap путь, по которому разделяемая библиотека хранится локально на вашем компьютере.  Затем sqlmap задаст вам несколько вопросов, загрузит разделяемую библиотеку в файловую систему сервера базы данных, создаст из нее пользовательские функции и, в зависимости от ваших опций, выполнит их.  Когда вы закончите использовать введенные UDF, sqlmap также может удалить их из базы данных.\n\nЭти методы подробно описаны в официальном документе Расширенное внедрение SQL для полного контроля над операционной системой.\n\nИспользуйте опцию --udf-inject и следуйте инструкциям.\n\nЕсли вы хотите, вы также можете указать путь к локальной файловой системе разделяемой библиотеки через командную строку, используя параметр --shared-lib.  Наоборот, sqlmap запросит у вас путь во время выполнения.\n\nЭта функция доступна только в том случае, если используется система управления базой данных MySQL или PostgreSQL.',
    '--file-read': 'Прочитать файл из файловой системы СУБД',
    '--file-write': 'Записать локальный файл в файловую систему СУБД',
    '--file-dest': 'Абсолютный путь для записи файла в СУБД',
    '--os-cmd': 'Также можно смоделировать реальную оболочку, в которой вы можете ввести столько произвольных команд, сколько пожелаете.  Параметр --os-shell и имеет те же функции автодополнения и истории TAB, что и --sql-shell.\n\nЕсли стекированные запросы не были идентифицированы в веб-приложении (например, PHP или ASP с серверной системой управления базами данных MySQL) и СУБД является MySQL, все еще возможно злоупотребление INTO OUTFILE предложения SELECT для создания веб-черного хода в доступную для записи папку в корневом каталоге документа веб-сервера и по-прежнему получать выполнение команды, предполагая, что внутренняя СУБД и веб-сервер размещены на одном сервере.  sqlmap поддерживает этот метод и позволяет пользователю предоставить разделенный запятыми список возможных корневых подпапок документов, в которые он пытается загрузить веб-файловый стейджер и последующий веб-бэкдор.  Кроме того, у sqlmap есть собственные протестированные веб-файловые стейджеры и бэкдоры для следующих языков:\n\n\tАSP\n\tASP.NET\n\tJSP\n\tPHP',
    '--os-shell': 'Также можно смоделировать реальную оболочку, в которой вы можете ввести столько произвольных команд, сколько пожелаете.  Параметр --os-shell и имеет те же функции автодополнения и истории TAB, что и --sql-shell.\n\nЕсли стекированные запросы не были идентифицированы в веб-приложении (например, PHP или ASP с серверной системой управления базами данных MySQL) и СУБД является MySQL, все еще возможно злоупотребление INTO OUTFILE предложения SELECT для создания веб-черного хода в доступную для записи папку в корневом каталоге документа веб-сервера и по-прежнему получать выполнение команды, предполагая, что внутренняя СУБД и веб-сервер размещены на одном сервере.  sqlmap поддерживает этот метод и позволяет пользователю предоставить разделенный запятыми список возможных корневых подпапок документов, в которые он пытается загрузить веб-файловый стейджер и последующий веб-бэкдор.  Кроме того, у sqlmap есть собственные протестированные веб-файловые стейджеры и бэкдоры для следующих языков:\n\n\tАSP\n\tASP.NET\n\tJSP\n\tPHP',
    '--os-pwn': 'Выполнение в памяти базы данных шелл-кода Metasploit через собственную пользовательскую функцию sqlmap sys_bineval().  Поддерживается в MySQL и PostgreSQL — ключ --os-pwn.',
    '--os-smbrelay': 'Выполнение шелл-кода Metasploit путем выполнения атаки отражения SMB (MS08-068) с запросом пути UNC от сервера базы данных к машине злоумышленника, на которой прослушивается эксплойт сервера Metasploit smb_relay.  Поддерживается при запуске sqlmap с высокими привилегиями (uid=0) в Linux/Unix и запуске целевой СУБД от имени администратора в Windows — переключатель --os-smbrelay.',
    '--os-bof': 'Выполнение шелл-кода Metasploit в памяти базы данных путем использования Microsoft SQL Server 2000 и 2005 sp_replwritetovarbin переполнения буфера в куче хранимой процедуры (MS09-004).  У sqlmap есть собственный эксплойт для срабатывания уязвимости с автоматическим обходом защиты памяти DEP, но он полагается на Metasploit для генерации шелл-кода, который будет выполняться в случае успешной эксплуатации — переключатель --os-bof.',
    '--priv-esc': 'Можно предоставить sqlmap переключатель --priv-esc для повышения привилегий пользователя процесса базы данных с помощью команды Metasploit getsystem, которая включает, помимо прочего, технику kitrap0d (MS10-015).',
    '--msf-path': 'Локальный путь где установлен Metasploit Framework',
    '--tmp-path': 'Удалённый абсолютный путь директории временных файлов',
    '--reg-read': 'С помощью этого переключателя вы можете прочитать значения ключей реестра.',
    '--reg-add': 'С помощью этого переключателя вы можете записывать значения ключей реестра.',
    '--reg-del': 'С помощью этого переключателя вы можете удалить разделы реестра.',
    '--reg-key': 'С параметром --reg-key вы указываете путь к используемому ключу реестра Windows, с --reg-value имя элемента значения внутри предоставленного ключа, с данными значения --reg-data, а с параметром --reg-type вы указываете тип предмет стоимости.',
    '--reg-value': 'С параметром --reg-key вы указываете путь к используемому ключу реестра Windows, с --reg-value имя элемента значения внутри предоставленного ключа, с данными значения --reg-data, а с параметром --reg-type вы указываете тип предмет стоимости.',
    '--reg-data': 'С параметром --reg-key вы указываете путь к используемому ключу реестра Windows, с --reg-value имя элемента значения внутри предоставленного ключа, с данными значения --reg-data, а с параметром --reg-type вы указываете тип предмет стоимости.',
    '--reg-type': 'С параметром --reg-key вы указываете путь к используемому ключу реестра Windows, с --reg-value имя элемента значения внутри предоставленного ключа, с данными значения --reg-data, а с параметром --reg-type вы указываете тип предмет стоимости.',
    '-s': 'sqlmap автоматически создает постоянный файл SQLite сеанса для каждой цели в выделенном выходном каталоге, где хранятся все данные, необходимые для возобновления сеанса.  Если пользователь хочет явно указать местоположение файла сеанса (например, для хранения данных сеанса для нескольких целей в одном месте), он может использовать эту опцию.',
    '-t': 'Для этой опции требуется аргумент, указывающий текстовый файл для записи всего HTTP(s)-трафика, сгенерированного sqlmap – HTTP(S)-запросы и HTTP(S)-ответы.\n\nЭто полезно в первую очередь для целей отладки — когда вы предоставляете разработчикам отчет о потенциальной ошибке, отправьте и этот файл.',
    '--answers': 'В случае, если этот пользователь хочет автоматически настроить ответы на вопросы, даже если используется --batch, используя эту опцию, он может сделать это, предоставив любую часть вопроса вместе с ответом после знака равенства.  Кроме того, ответы на разные вопросы можно разделить с помощью символа-разделителя ",".(например "quit=N,follow=N")',
    '--base64': 'В случае, если целевое веб-приложение использует кодировку Base64 для хранения данных внутри определенных параметров (например, словарь JSON в кодировке Base64), пользователь может объявить его с параметром --base64 и, таким образом, указать sqlmap для правильной проверки базовых значений.',
    '--base64-safe': 'Использовать безопасный алфавит Base64 для URL и имен файлов (RFC 4648)',
    '--batch': 'Если вы хотите, чтобы sqlmap запускался как пакетный инструмент без какого-либо взаимодействия с пользователем, когда этого требует sqlmap, вы можете принудительно выполнить это с помощью переключателя --batch.  Это оставит sqlmap с поведением по умолчанию всякий раз, когда потребуется ввод данных пользователем.',
    '--binary-fields': 'В случае извлечения двоичного содержимого, как в примере с таблицами, имеющими столбцы с сохраненными двоичными значениями (например, пароль столбца с сохраненными двоичными хэш-значениями пароля), можно использовать параметр --binary-fields для (дополнительной) правильной обработки. по sqlmap.  Все эти поля (т.е. столбцы таблицы) затем извлекаются и представляются в их шестнадцатеричном представлении, поэтому впоследствии их можно правильно обработать другими инструментами (например, john).',
    '--check-internet': 'Проверьте подключение к Интернету, прежде чем оценивать цель',
    '--cleanup': 'Очистить СУБД от специфичных для sqlmap пользовательских функций и таблиц',
    '--crawl': 'sqlmap может собирать потенциально уязвимые ссылки, собирая их (сканируя), начиная с целевого местоположения.  Используя эту опцию, пользователь может установить глубину (расстояние от начального местоположения), ниже которой sqlmap не будет переходить на фазу сбора, поскольку процесс выполняется рекурсивно, пока есть новые ссылки для посещения.',
    '--crawl-exclude': 'С помощью этой опции вы можете исключить страницы из сканирования, указав регулярное выражение.  Например, если вы хотите пропустить все страницы, в путях которых есть ключевое слово logout, вы можете использовать --crawl-exclude=logout.',
    '--csv-del': 'Когда выгружаемые данные сохраняются в формате CSV (--dump-format=CSV), записи должны быть разделены «значением разделения» (по умолчанию ",").  В случае, если этот пользователь хочет переопределить значение по умолчанию, он может использовать эту опцию (например, --csv-del=";").',
    '--charset': 'Принудительная кодировка символов, используемых для получения данных',
    '--dump-format': 'sqlmap поддерживает три различных типа форматирования при сохранении выгруженных данных таблицы в соответствующий файл внутри выходного каталога: CSV, HTML и SQLITE.  По умолчанию используется CSV, где каждая строка таблицы хранится в текстовом файле построчно, и где каждая запись отделяется запятой (или запятой, предоставленной опцией --csv-del).  В случае HTML выходные данные сохраняются в файле HTML, где каждая строка представлена ​​строкой внутри отформатированной таблицы.  В случае SQLITE выходные данные сохраняются в базе данных SQLITE, где исходное содержимое таблицы реплицируется в соответствующую таблицу с тем же именем.',
    '--encoding': 'Для правильного декодирования символьных данных sqlmap использует либо информацию, предоставленную веб-сервером (например, HTTP-заголовок Content-Type), либо эвристический результат, полученный из chardet сторонней библиотеки.\n\nТем не менее, бывают случаи, когда это значение необходимо перезаписать, особенно при извлечении данных, содержащих международные буквы, отличные от ASCII (например, --encoding=GBK).  Следует отметить, что существует вероятность того, что информация о символах будет безвозвратно потеряна из-за неявной несовместимости между сохраненным содержимым базы данных и используемым коннектором базы данных на целевой стороне.',
    '--eta': 'Можно рассчитать и показать в режиме реального времени предполагаемое время прибытия для получения каждого вывода запроса.  Это показано, когда метод, используемый для извлечения вывода, представляет собой любой из типов слепой инъекции SQL.',
    '--flush-session': 'Поскольку вы уже знакомы с концепцией файла сеанса из приведенного выше описания, полезно знать, что вы можете сбросить содержимое этого файла с помощью параметра --flush-session.  Таким образом, вы можете избежать механизмов кэширования, реализованных по умолчанию в sqlmap.  Другой возможный способ — вручную удалить файлы сеанса.',
    '--forms': 'Скажем, вы хотите протестировать огромную форму поиска против SQL-инъекций или хотите протестировать обход входа в систему (обычно только два поля ввода с именами, такими как имя пользователя и пароль), вы можете либо передать sqlmap запрос в файле запроса (-r) , соответствующим образом установите POST-данные (--data) или позвольте sqlmap сделать это за вас!\n\nОба упомянутых выше экземпляра и многие другие отображаются как теги <form> и <input> в телах ответа HTML, и именно здесь этот переключатель вступает в игру.\n\nПредоставьте sqlmap параметр --forms, а также страницу, на которой форма может быть найдена в качестве целевого URL-адреса (-u), и sqlmap запросит для вас целевой URL-адрес, проанализирует имеющиеся у него формы и проведет вас по тестированию SQL-инъекций на эти поля ввода формы (параметры), а не предоставленный целевой URL.',
    '--fresh-queries': 'Поскольку вы уже знакомы с концепцией файла сеанса из приведенного выше описания, полезно знать, что вы можете игнорировать результаты запроса, используя опцию --fresh-queries.  Таким образом, вы можете сохранить файл сеанса нетронутым и для выбранного запуска избежать возобновления/восстановления вывода запросов.',
    '--gpage': 'Использовать результаты дорка Google с указанного номера страницы',
    '--har': 'Записывать весь HTTP-трафик в HAR-файл',
    '--hex': 'В безнадежных случаях поиск данных, отличных от ASCII, требует особых требований.  Одним из решений этой проблемы является использование шестнадцатеричных функций СУБД.  При включении этого переключателя данные кодируются в шестнадцатеричной форме перед извлечением, а затем декодируются в исходную форму.',
    '--output-dir': 'sqlmap по умолчанию сохраняет файлы сеанса и результатов в выходных данных подкаталога.  Если вы хотите использовать другое место, вы можете использовать эту опцию (например, --output-dir=/tmp).',
    '--parse-errors': 'Если веб-приложение настроено в режиме отладки, чтобы отображать в ответах HTTP сообщения об ошибках внутренней системы управления базами данных, sqlmap может проанализировать и отобразить их для вас.\n\nЭто полезно для целей отладки, например для понимания того, почему определенное перечисление или переключатель переключения не работает — это может быть связано с привилегиями пользователя сеанса, и в этом случае вы увидите сообщение об ошибке СУБД в строках "Access denied for user <SESSION USER>".',
    '--preprocess': 'С помощью этой опции можно использовать сценарий предварительной обработки для (HTTP) данных запроса перед отправкой в цель (например, для точной настройки запроса).',
    '--postprocess': 'С помощью этой опции можно использовать сценарий постобработки для данных ответа (HTTP) до того, как они будут использованы механизмом обнаружения sqlmap (например, для декодирования данных или удаления ненужных данных).',
    '--repair': 'Повторно сбросить записи, имеющие отметку неизвестного символа (?)',
    '--save': 'Можно сохранить параметры командной строки в конфигурационный INI-файл.  Затем сгенерированный файл можно отредактировать и передать в sqlmap с параметром -c, как описано выше.',
    '--scope': 'Регулярное выражение для фильтрации целей из лога proxy',
    '--skip-heuristics': 'Пропустить эвристическое обнаружение уязвимостей SQLi/XSS',
    '--skip-waf': 'Пропустить эвристическое обнаружение WAF/IPS защиты',
    '--table-prefix': 'Префикс, используемый для временных таблиц (по умолчанию: «sqlmap»)',
    '--test-filter': 'Выбрать тесты по полезной нагрузке и/или названиям (например, ROW)',
    '--test-skip': 'Пропустить тесты по полезной нагрузке и/или названиям (например, BENCHMARK)',
    '--web-root': 'Корневая директория веб-сервера (например, "/var/www")',
    '-z': 'Может стать утомительным вводить все нужные параметры и переключатели, особенно те, которые используются чаще всего (например, --batch --random-agent --ignore-proxy --technique=BEU).  Есть более простой и короткий способ решения этой проблемы.  В sqlmap это называется "мнемоника".\n\nКаждая опция и переключатель могут быть записаны в более короткой мнемонической форме с использованием опции -z, разделенной запятой (,), где мнемоника представляет только первую произвольно выбранную часть исходного имени.  Нет строгого сопоставления опций и переключателей с их соответствующими сокращенными аналогами.  Единственным обязательным условием является отсутствие другой опции или переключателя с таким же префиксом, как и желаемый.',
    '--alert': 'Запустить команду(ы) ОС, когда найдена SQL инъекция',
    '--beep': 'В случае, если этот пользователь использует переключатель --beep, он будет предупрежден звуковым сигналом сразу после обнаружения SQL-инъекции.  Это особенно полезно, когда имеется большой объемный список (опция -m) целевых URL-адресов, которые необходимо протестировать.',
    '--dependencies': 'sqlmap в некоторых особых случаях требует независимой установки дополнительных сторонних библиотек (например, параметры -d, переключатель --os-pwn в случае туннелирования icmpsh, параметр --auth-type в случае типа аутентификации NTLM HTTP и т. д.), и это предупредит пользователя только в таких особых случаях.  Но если вы хотите самостоятельно проверить все эти дополнительные зависимости от сторонних библиотек, вы можете использовать параметр --dependencies.',
    '--disable-coloring': 'Отключить раскрашивание вывода в консоли',
    '--list-tampers': 'Вывести список доступных скриптов tamper',
    '--offline': 'При использовании ключа --offline sqlmap будет использовать только данные предыдущего сеанса в перечислении данных.  В основном это означает, что во время такого запуска не будет попыток подключения.',
    '--purge': 'В случае, если этот пользователь решит безопасно удалить все содержимое из каталога данных sqlmap (например, $HOME/.local/share/sqlmap), содержащее все сведения о цели из предыдущих запусков sqlmap, он может использовать переключатель --purge.  При очистке все файлы из (под)каталогов в папке данных будут перезаписаны случайными данными, усечены, переименованы в случайные имена, (под)каталоги также будут переименованы в случайные имена, и, наконец, все дерево каталогов будет удалено.',
    '--results-file': 'Расположение файла CSV с результатами в режиме множества целей',
    '--sqlmap-shell': 'Запрос интерактивного шелла sqlmap',
    '--tmp-dir': 'Локальная директория для сохранения временных файлов',
    '--unstable': 'Настроить опции для нестабильных соединений',
    '--update': 'Обновить sqlmap',
    '--wizard': 'Для начинающих пользователей есть интерфейс мастера, который использует простой рабочий процесс с минимальным количеством вопросов.  Если пользователь просто вводит целевой URL-адрес и использует ответы по умолчанию (например, нажав Enter), он должен иметь правильно настроенную среду запуска sqlmap к концу рабочего процесса.'
}